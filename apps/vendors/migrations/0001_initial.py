# Generated by Django 2.2.9 on 2020-03-24 12:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CheckCWeights100',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_id', models.IntegerField(blank=True, null=True)),
                ('persona_id', models.IntegerField(blank=True, null=True)),
                ('sum_c_weight', models.IntegerField(blank=True, null=True)),
                ('price_score_weight', models.IntegerField(blank=True, null=True)),
                ('sum_c_weight_price_score_weight', models.IntegerField(blank=True, db_column='sum_c_weight + price_score_weight', null=True)),
            ],
            options={
                'db_table': 'check_c_weights_100',
            },
        ),
        migrations.CreateModel(
            name='CheckMissingPriceScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_id', models.IntegerField(blank=True, null=True)),
                ('persona_id', models.IntegerField(blank=True, null=True)),
                ('price_score_weight', models.IntegerField(blank=True, null=True)),
                ('vendor_id', models.IntegerField(blank=True, null=True)),
                ('partic', models.IntegerField(blank=True, null=True)),
                ('price_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'check_missing_price_scores',
            },
        ),
        migrations.CreateModel(
            name='CheckNormWeights100',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_id', models.IntegerField(blank=True, null=True)),
                ('persona_id', models.IntegerField(blank=True, null=True)),
                ('sum_norm_weights', models.IntegerField(blank=True, null=True)),
                ('price_score_weight', models.IntegerField(blank=True, null=True)),
                ('sum_norm_weights_price_score_weight', models.IntegerField(blank=True, db_column='sum_norm_weights + price_score_weight', null=True)),
            ],
            options={
                'db_table': 'check_norm_weights_100',
            },
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('mid', models.AutoField(primary_key=True, serialize=False)),
                ('module_name', models.CharField(choices=[('Sourcing', 'Sourcing'), ('SA', 'SA'), ('SXM', 'SXM'), ('CLM', 'CLM'), ('ePRO', 'ePRO'), ('I2P', 'I2P'), ('P2P', 'P2P'), ('SPT', 'SPT'), ('S2P', 'S2P'), ('AP', 'AP'), ('TS', 'TS'), ('SOW', 'SOW'), ('ICW', 'ICW')], max_length=50, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'modules',
                'unique_together': {('mid', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='MsSmScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.IntegerField(blank=True, null=True)),
                ('persona_name', models.IntegerField(blank=True, null=True)),
                ('vendor_name', models.IntegerField(blank=True, null=True)),
                ('sm_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ms_sm_scores',
            },
        ),
        migrations.CreateModel(
            name='NormEWeights',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_id', models.IntegerField(blank=True, null=True)),
                ('persona_id', models.IntegerField(blank=True, null=True)),
                ('e_id', models.IntegerField(blank=True, null=True)),
                ('c_id', models.IntegerField(blank=True, null=True)),
                ('sum_e_weight_by_c', models.IntegerField(blank=True, null=True)),
                ('c_weight', models.IntegerField(blank=True, null=True)),
                ('norm_weight', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'norm_e_weights',
            },
        ),
        migrations.CreateModel(
            name='ParentCategories',
            fields=[
                ('pcid', models.AutoField(primary_key=True, serialize=False)),
                ('parent_category_name', models.CharField(blank=True, max_length=45, null=True)),
                ('timestamp', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'parent_categories',
                'unique_together': {('pcid', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='Personas',
            fields=[
                ('personaid', models.AutoField(primary_key=True, serialize=False)),
                ('persona_name', models.CharField(blank=True, max_length=45, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'personas',
                'unique_together': {('personaid', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='Rfis',
            fields=[
                ('rfiid', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('issue_datetime', models.DateTimeField(blank=True, null=True)),
                ('open_datetime', models.DateTimeField(blank=True, null=True)),
                ('close_datetime', models.DateTimeField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rfis',
                'unique_together': {('rfiid', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='SmScoresPartic1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_id', models.IntegerField(blank=True, null=True)),
                ('persona_id', models.IntegerField(blank=True, null=True)),
                ('vendor_id', models.IntegerField(blank=True, null=True)),
                ('sm_score_partic_1', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sm_scores_partic_1',
            },
        ),
        migrations.CreateModel(
            name='Subcategories',
            fields=[
                ('sid', models.AutoField(primary_key=True, serialize=False)),
                ('subcategory_name', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('c', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Categories')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'subcategories',
                'unique_together': {('sid', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='SumVpScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_id', models.IntegerField(blank=True, null=True)),
                ('m_id', models.IntegerField(blank=True, null=True)),
                ('persona_id', models.IntegerField(blank=True, null=True)),
                ('sum_vp_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sum_vp_scores',
            },
        ),
        migrations.CreateModel(
            name='SurveyQuestions',
            fields=[
                ('questionid', models.AutoField(primary_key=True, serialize=False)),
                ('statement', models.CharField(max_length=500)),
                ('active', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'survey_questions',
                'unique_together': {('questionid', 'timestamp', 'rfi')},
            },
        ),
        migrations.CreateModel(
            name='UserRoles',
            fields=[
                ('user_roleid', models.AutoField(primary_key=True, serialize=False)),
                ('user_role', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'user_roles',
            },
        ),
        migrations.CreateModel(
            name='VpScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_id', models.IntegerField(blank=True, null=True)),
                ('m_id', models.IntegerField(blank=True, null=True)),
                ('persona_id', models.IntegerField(blank=True, null=True)),
                ('e_id', models.IntegerField(blank=True, null=True)),
                ('vp_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vp_scores',
            },
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('vendorid', models.AutoField(primary_key=True, serialize=False)),
                ('vendor_name', models.CharField(max_length=45, unique=True)),
                ('country', models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('American Samoa', 'American Samoa'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Anguilla', 'Anguilla'), ('Antarctica', 'Antarctica'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Aruba', 'Aruba'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas (the)', 'Bahamas (the)'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bermuda', 'Bermuda'), ('Bhutan', 'Bhutan'), ('Bolivia (Plurinational State of)', 'Bolivia (Plurinational State of)'), ('Bonaire, Sint Eustatius and Saba', 'Bonaire, Sint Eustatius and Saba'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Bouvet Island', 'Bouvet Island'), ('Brazil', 'Brazil'), ('British Indian Ocean Territory (the)', 'British Indian Ocean Territory (the)'), ('Brunei Darussalam', 'Brunei Darussalam'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cabo Verde', 'Cabo Verde'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Cayman Islands (the)', 'Cayman Islands (the)'), ('Central African Republic (the)', 'Central African Republic (the)'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Christmas Island', 'Christmas Island'), ('Cocos (Keeling) Islands (the)', 'Cocos (Keeling) Islands (the)'), ('Colombia', 'Colombia'), ('Comoros (the)', 'Comoros (the)'), ('Congo (the Democratic Republic of the)', 'Congo (the Democratic Republic of the)'), ('Congo (the)', 'Congo (the)'), ('Cook Islands (the)', 'Cook Islands (the)'), ('Costa Rica', 'Costa Rica'), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Curaçao', 'Curaçao'), ('Cyprus', 'Cyprus'), ('Czechia', 'Czechia'), ("Côte d'Ivoire", "Côte d'Ivoire"), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic (the)', 'Dominican Republic (the)'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Eswatini', 'Eswatini'), ('Ethiopia', 'Ethiopia'), ('Falkland Islands (the) [Malvinas]', 'Falkland Islands (the) [Malvinas]'), ('Faroe Islands (the)', 'Faroe Islands (the)'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('French Guiana', 'French Guiana'), ('French Polynesia', 'French Polynesia'), ('French Southern Territories (the)', 'French Southern Territories (the)'), ('Gabon', 'Gabon'), ('Gambia (the)', 'Gambia (the)'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Gibraltar', 'Gibraltar'), ('Greece', 'Greece'), ('Greenland', 'Greenland'), ('Grenada', 'Grenada'), ('Guadeloupe', 'Guadeloupe'), ('Guam', 'Guam'), ('Guatemala', 'Guatemala'), ('Guernsey', 'Guernsey'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'), ('Holy See (the)', 'Holy See (the)'), ('Honduras', 'Honduras'), ('Hong Kong', 'Hong Kong'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran (Islamic Republic of)', 'Iran (Islamic Republic of)'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Isle of Man', 'Isle of Man'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jersey', 'Jersey'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ("Korea (the Democratic People's Republic of)", "Korea (the Democratic People's Republic of)"), ('Korea (the Republic of)', 'Korea (the Republic of)'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ("Lao People's Democratic Republic (the)", "Lao People's Democratic Republic (the)"), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Macao', 'Macao'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands (the)', 'Marshall Islands (the)'), ('Martinique', 'Martinique'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mayotte', 'Mayotte'), ('Mexico', 'Mexico'), ('Micronesia (Federated States of)', 'Micronesia (Federated States of)'), ('Moldova (the Republic of)', 'Moldova (the Republic of)'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Montserrat', 'Montserrat'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands (the)', 'Netherlands (the)'), ('New Caledonia', 'New Caledonia'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger (the)', 'Niger (the)'), ('Nigeria', 'Nigeria'), ('Niue', 'Niue'), ('Norfolk Island', 'Norfolk Island'), ('Northern Mariana Islands (the)', 'Northern Mariana Islands (the)'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palestine, State of', 'Palestine, State of'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines (the)', 'Philippines (the)'), ('Pitcairn', 'Pitcairn'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Puerto Rico', 'Puerto Rico'), ('Qatar', 'Qatar'), ('Republic of North Macedonia', 'Republic of North Macedonia'), ('Romania', 'Romania'), ('Russian Federation (the)', 'Russian Federation (the)'), ('Rwanda', 'Rwanda'), ('Réunion', 'Réunion'), ('Saint Barthélemy', 'Saint Barthélemy'), ('Saint Helena, Ascension and Tristan da Cunha', 'Saint Helena, Ascension and Tristan da Cunha'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Martin (French part)', 'Saint Martin (French part)'), ('Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Sint Maarten (Dutch part)', 'Sint Maarten (Dutch part)'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan (the)', 'Sudan (the)'), ('Suriname', 'Suriname'), ('Svalbard and Jan Mayen', 'Svalbard and Jan Mayen'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syrian Arab Republic', 'Syrian Arab Republic'), ('Taiwan (Province of China)', 'Taiwan (Province of China)'), ('Tajikistan', 'Tajikistan'), ('Tanzania, United Republic of', 'Tanzania, United Republic of'), ('Thailand', 'Thailand'), ('Timor-Leste', 'Timor-Leste'), ('Togo', 'Togo'), ('Tokelau', 'Tokelau'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Turks and Caicos Islands (the)', 'Turks and Caicos Islands (the)'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates (the)', 'United Arab Emirates (the)'), ('United Kingdom of Great Britain and Northern Ireland (the)', 'United Kingdom of Great Britain and Northern Ireland (the)'), ('United States Minor Outlying Islands (the)', 'United States Minor Outlying Islands (the)'), ('United States of America (the)', 'United States of America (the)'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Venezuela (Bolivarian Republic of)', 'Venezuela (Bolivarian Republic of)'), ('Viet Nam', 'Viet Nam'), ('Virgin Islands (British)', 'Virgin Islands (British)'), ('Virgin Islands (U.S.)', 'Virgin Islands (U.S.)'), ('Wallis and Futuna', 'Wallis and Futuna'), ('Western Sahara', 'Western Sahara'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe'), ('Åland Islands', 'Åland Islands')], max_length=45)),
                ('nda', models.DateField(blank=True, null=True)),
                ('consent', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'vendors',
                'unique_together': {('vendorid', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='VendorContacts',
            fields=[
                ('contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_name', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=80, null=True, unique=True)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
                ('primary', models.BooleanField(default=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='vendors.Vendors')),
            ],
            options={
                'db_table': 'vendor_contacts',
            },
        ),
        migrations.CreateModel(
            name='References',
            fields=[
                ('reference_id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.CharField(blank=True, max_length=45, null=True)),
                ('ref_status_id', models.IntegerField(blank=True, null=True)),
                ('internal_comments', models.CharField(blank=True, max_length=100, null=True)),
                ('provider_public', models.CharField(blank=True, max_length=10, null=True)),
                ('original_vendor_id', models.IntegerField(blank=True, null=True)),
                ('active', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('rfi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'references',
            },
        ),
        migrations.CreateModel(
            name='LogTrail',
            fields=[
                ('log_row_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=45, null=True)),
                ('successful', models.BooleanField(default=True)),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'log_trail',
            },
        ),
        migrations.CreateModel(
            name='Elements',
            fields=[
                ('eid', models.AutoField(primary_key=True, serialize=False)),
                ('element_name', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=5000, null=True)),
                ('scoring_scale', models.CharField(blank=True, max_length=2000, null=True)),
                ('e_order', models.DecimalField(decimal_places=4, max_digits=9)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('s', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Subcategories')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'elements',
                'unique_together': {('eid', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='CIQuestions',
            fields=[
                ('c_i_questionid', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(blank=True, max_length=500, null=True)),
                ('active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'c_i_questions',
                'unique_together': {('c_i_questionid', 'rfi', 'timestamp')},
            },
        ),
        migrations.AddField(
            model_name='categories',
            name='pc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.ParentCategories'),
        ),
        migrations.AddField(
            model_name='categories',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('eventid', models.IntegerField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=45)),
                ('date1', models.DateTimeField(blank=True, null=True)),
                ('date2', models.DateTimeField()),
                ('all', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('rfi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'calendar',
            },
        ),
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('attachment_id', models.AutoField(primary_key=True, serialize=False)),
                ('filename', models.CharField(blank=True, max_length=200, null=True)),
                ('extension', models.CharField(blank=True, max_length=10, null=True)),
                ('path', models.CharField(blank=True, max_length=500, null=True)),
                ('notes', models.CharField(blank=True, max_length=300, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'attachments',
                'unique_together': {('attachment_id', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='WeightsSurveyQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Personas')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.SurveyQuestions')),
                ('rfi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'weights_survey_questions',
                'unique_together': {('persona', 'm', 'question')},
            },
        ),
        migrations.CreateModel(
            name='WeightsElements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('e_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('timestamp', models.DateTimeField()),
                ('e', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Elements')),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Personas')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'weights_elements',
                'unique_together': {('m', 'persona', 'e', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='WeightsCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_weight', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('c', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Categories')),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Personas')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'weights_categories',
                'unique_together': {('m', 'persona', 'c', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='VendorModuleNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=45)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='vendor_modules', to='vendors.Vendors')),
            ],
            options={
                'db_table': 'vendor_module_names',
                'unique_together': {('vendor', 'module')},
            },
        ),
        migrations.CreateModel(
            name='UserAssignedSubcategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('s', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Subcategories')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('user_to_assign', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_to_assign', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_assigned_subcategories',
                'unique_together': {('user_to_assign', 's', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='SurveyAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(blank=True, max_length=1000, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.SurveyQuestions')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.References')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'survey_answers',
                'unique_together': {('vendor', 'question')},
            },
        ),
        migrations.CreateModel(
            name='SmScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sm_score', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('analyst_response', models.IntegerField(blank=True, null=True)),
                ('e', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Elements')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'sm_scores',
                'unique_together': {('vendor', 'e', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='Shifts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sm_score_partic_2', models.DecimalField(decimal_places=2, max_digits=3)),
                ('timestamp', models.DateTimeField()),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Personas')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'shifts',
                'unique_together': {('m', 'persona', 'vendor', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='SelfScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_score', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('vendor_response', models.IntegerField(blank=True, null=True)),
                ('e', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Elements')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'self_scores',
                'unique_together': {('vendor', 'e', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='SelfDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_description', models.CharField(blank=True, max_length=2500, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('vendor_response', models.IntegerField(blank=True, null=True)),
                ('e', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Elements')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'self_descriptions',
                'unique_together': {('vendor', 'e', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='RfiParticipationStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfi_status', models.CharField(choices=[('Invited', 'Invited'), ('Accepted', 'Accepted'), ('Declined', 'Declined'), ('RFI Created', 'RFI Created'), ('RFI Outstanding', 'RFI Outstanding'), ('Received', 'Received'), ('Scored', 'Scored'), ('Closed', 'Closed')], max_length=50)),
                ('user_id', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('last_vendor_response', models.IntegerField(blank=True, null=True)),
                ('last_analyst_response', models.IntegerField(blank=True, null=True)),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.ParentCategories')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'rfi_participation_status',
                'unique_together': {('vendor', 'rfi', 'timestamp', 'pc')},
            },
        ),
        migrations.CreateModel(
            name='RfiParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('user_id', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'rfi_participation',
                'unique_together': {('vendor', 'm', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='ReferenceModules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.References')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reference_modules',
                'unique_together': {('reference', 'm')},
            },
        ),
        migrations.CreateModel(
            name='PriceScores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_score', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Personas')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'price_scores',
                'unique_together': {('vendor', 'm', 'persona', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='ModulePersonas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_score_weight', models.DecimalField(decimal_places=3, max_digits=5)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Personas')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'module_personas',
                'unique_together': {('m', 'persona', 'rfi')},
            },
        ),
        migrations.CreateModel(
            name='ModuleElements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('e', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Elements')),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'module_elements',
                'unique_together': {('m', 'e', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='FinalOutputData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bubble_size', models.IntegerField(blank=True, null=True)),
                ('number_of_refs', models.IntegerField(blank=True, null=True)),
                ('customer_score', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('sm_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('displayed', models.IntegerField(blank=True, null=True)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('m', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Personas')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.Rfis')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'final_output_data',
                'unique_together': {('m', 'persona', 'vendor', 'rfi')},
            },
        ),
        migrations.CreateModel(
            name='ElementsAttachments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('active', models.IntegerField()),
                ('vendor_response', models.IntegerField(blank=True, null=True)),
                ('attachment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Attachments')),
                ('e', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Elements')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
            ],
            options={
                'db_table': 'elements_attachments',
                'unique_together': {('e', 'attachment', 'rfi', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='CIAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(blank=True, max_length=1000, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('c_i_question', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.CIQuestions')),
                ('rfi', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'c_i_answers',
                'unique_together': {('vendor', 'c_i_question')},
            },
        ),
        migrations.CreateModel(
            name='ChartsParticipation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_display_name', models.CharField(max_length=45)),
                ('participation_mode', models.IntegerField()),
                ('customer_count', models.IntegerField(blank=True, null=True)),
                ('display_in_chart', models.IntegerField()),
                ('include_in_averages', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'charts_participation',
                'unique_together': {('vendor', 'm', 'rfi', 'timestamp')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='categories',
            unique_together={('cid', 'timestamp')},
        ),
        migrations.CreateModel(
            name='CalendarVendors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('calendar_vendors_ccol', models.CharField(max_length=45)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Calendar')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'calendar_vendors',
                'unique_together': {('event', 'vendor')},
            },
        ),
        migrations.CreateModel(
            name='CalendarModules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Calendar')),
                ('m', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Modules')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'calendar_modules',
                'unique_together': {('event', 'm')},
            },
        ),
        migrations.CreateModel(
            name='AssignedVendorsAnalysts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('analyst', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'assigned_vendors_analysts',
                'unique_together': {('analyst', 'vendor', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='AssignedPcAnalysts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('analyst', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('pc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.ParentCategories')),
            ],
            options={
                'db_table': 'assigned_pc_analysts',
                'unique_together': {('analyst', 'pc', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='AnalystsFlaggedElements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.IntegerField(blank=True, null=True)),
                ('rfi_id', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('e', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Elements')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'analysts_flagged_elements',
                'unique_together': {('vendor', 'e', 'user', 'rfi_id', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='AnalystNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analyst_notes', models.CharField(blank=True, max_length=300, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('analyst_response', models.IntegerField(blank=True, null=True)),
                ('e', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Elements')),
                ('rfi', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Rfis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vendors.Vendors')),
            ],
            options={
                'db_table': 'analyst_notes',
                'unique_together': {('vendor', 'e', 'rfi', 'timestamp')},
            },
        ),
    ]
